@using BlogSystem.Web.ViewModels

@model PaginationModel

<nav id="paggingMenu">
    <ul class="pagination">
        @{
            var loadElementId = "load" + @Model.Id;
        }
        @if (@Model.CurrentPage > 1)
        {
            var previousPage = (@Model.CurrentPage - 1);
            <li>
                @Ajax.RawActionLink(string.Format("<span aria-hidden='true'>&laquo;&laquo;</span>"), @Model.ActionName, @Model.ControllerName, new { pageNumber = 1, area = @Model.AreaName, Id = @Model.Id, },
                        new AjaxOptions
                        {
                            InsertionMode = InsertionMode.Replace,
                            UpdateTargetId = @Model.UpdateTarget,
                            LoadingElementId = loadElementId,
                            HttpMethod = "Get",
                        },
                        new { aria_label = "First", Title = "First Page" })
            </li>
            <li>
                @Ajax.RawActionLink(string.Format("<span aria-hidden='true'>&laquo;</span>"), @Model.ActionName, @Model.ControllerName, new { pageNumber = @previousPage, area = @Model.AreaName, Id = @Model.Id, },
                        new AjaxOptions
                        {
                            InsertionMode = InsertionMode.Replace,
                            UpdateTargetId = @Model.UpdateTarget,
                            LoadingElementId = loadElementId,
                            HttpMethod = "Get",
                        },
                        new { aria_label = "Previous", Title = "Previous Page" })
            </li>
        }
        else
        {
            <li class="disabled">
                <a href="#" aria-label="First">
                    <span aria-hidden="true">&laquo;&laquo;</span>
                </a>
            </li>
            <li class="disabled">
                <a href="#" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
        }

        @for (int i = @Model.StartPage; i <= @Model.EndPage; i++)
        {
            if (i == @Model.CurrentPage)
            {
                <li class="active"><a href="#">@i<span class="sr-only">(current)</span></a></li>
            }
            else
            {
                <li>
                    @Ajax.ActionLink(i.ToString(), @Model.ActionName, @Model.ControllerName, new { pageNumber = i, area = @Model.AreaName, Id = @Model.Id, },
                            new AjaxOptions
                            {
                                InsertionMode = InsertionMode.Replace,
                                UpdateTargetId = @Model.UpdateTarget,
                                LoadingElementId = loadElementId,
                                HttpMethod = "Get",
                            },
                            new { Title = "Page " + i })
                </li>
            }
        }
        @if (@Model.CurrentPage < @Model.EndPage)
        {
            var nextPage = (@Model.CurrentPage + 1);
            <li>
                @Ajax.RawActionLink(string.Format("<span aria-hidden='true'>&raquo;</span>"), @Model.ActionName, @Model.ControllerName, new { pageNumber = @nextPage, area = @Model.AreaName, Id = @Model.Id, },
                        new AjaxOptions
                        {
                            InsertionMode = InsertionMode.Replace,
                            UpdateTargetId = @Model.UpdateTarget,
                            LoadingElementId = loadElementId,
                            HttpMethod = "Get",
                        },
                        new { aria_label = "Next", Title = "Next Page" })
            </li>
            <li>
                @Ajax.RawActionLink(string.Format("<span aria-hidden='true'>&raquo;&raquo;</span>"), @Model.ActionName, @Model.ControllerName, new { pageNumber = @Model.AvailablePages, area = @Model.AreaName, Id = @Model.Id, },
                        new AjaxOptions
                        {
                            InsertionMode = InsertionMode.Replace,
                            UpdateTargetId = @Model.UpdateTarget,
                            LoadingElementId = loadElementId,
                            HttpMethod = "Get",
                        },
                        new { aria_label = "Last", Title = "Last Page" })
            </li>
        }
        else
        {
            <li class="disabled">
                <a href="#" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
            <li class="disabled">
                <a href="#" aria-label="Last">
                    <span aria-hidden="true">&raquo;&raquo;</span>
                </a>
            </li>
        }
        <li id="@loadElementId" style="display:none">
            <button type="button" class="btn btn-default btn-warning" aria-label="Left Align">
                <span class="glyphicon glyphicon-search" aria-hidden="true"></span>
            </button>
        </li>
    </ul>
</nav>
